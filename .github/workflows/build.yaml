name: Build


on:
  push:
    branches:
      - 'develop'
      - 'release/**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Dump github context
        run: echo "$GITHUB_CONTEXT"
        shell: bash
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}

      - name: Checkout the git repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0


      # Build on Java11 and Gradle
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Gradle build test & sonar
        timeout-minutes: 45
        run: ./gradlew --build-cache build



      - name: Extract branch name
        if: github.event_name != 'pull_request'
        run: |
          echo "branch=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
          echo "branch=${GITHUB_REF#refs/heads/}"
      - name: Extract branch name from pull request
        if: github.event_name == 'pull_request'
        run: |
          echo "branch=${GITHUB_HEAD_REF}" >> $GITHUB_ENV
          echo "branch=${GITHUB_HEAD_REF}"



      - name: Docker build, tag, and push image to Amazon ECR
        env:
          ECR_IMAGE_REPO: ${{ github.event.repository.name }}
          ECR_NAMESPACE: entrnce
          ECR_REGISTRY: ecr-registry
          GIT_SHA: ${{ github.sha }}
        run: |
          echo "docker build -t $ECR_REGISTRY/$ECR_NAMESPACE/$ECR_IMAGE_REPO:int -t $ECR_REGISTRY/$ECR_NAMESPACE/$ECR_IMAGE_REPO:$GIT_SHA ."
          echo "docker push -a $ECR_REGISTRY/$ECR_NAMESPACE/$ECR_IMAGE_REPO"


      - name: Tag in Git
        if: github.ref != 'refs/heads/develop' && github.ref != 'refs/heads/main'
        run: |
          git tag ${{ env.branch }}
          git tag
      - name: Tag push in Git
        if: github.ref != 'refs/heads/develop' &&
          ${{ !env.ACT }}
        run: git push origin --tags
